version: "3.8"

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    networks:
      - kong-net
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongo_data:/data/db

  auth-service:
    build: .
    container_name: auth-service
    networks:
      - kong-net
    depends_on:
      mongo:
        condition: service_started
    environment:
      - MONGO_URL=mongodb://admin:password@mongo:27017
    ports:
      - "8002:8002"

  kong-database:
    image: postgres:13
    container_name: kong-database
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - kong-database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migrations:
    image: kong/kong-gateway:latest
    networks:
      - kong-net
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    command: kong migrations bootstrap

  kong:
    image: kong/kong-gateway:latest
    container_name: kong
    networks:
      - kong-net
    depends_on:
      kong-migrations:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
  kong-setup:
    image: curlimages/curl:latest
    container_name: kong-setup
    networks:
      - kong-net
    depends_on:
      - kong
    volumes:
      - ./kong-setup.sh:/app/kong-setup.sh
    entrypoint: ["sh", "/app/kong-setup.sh"]

networks:
  kong-net:
    driver: bridge

volumes:
  mongo_data: {}
  kong-database-data: {}
